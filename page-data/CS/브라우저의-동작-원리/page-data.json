{"componentChunkName":"component---src-templates-blog-post-js","path":"/CS/브라우저의-동작-원리/","result":{"data":{"site":{"siteMetadata":{"title":"Yeongjae-Shin.io","author":"Yeongjae-Shin","siteUrl":"https://yeongjae-shin.github.io","comment":{"disqusShortName":"","utterances":"Yeongjae-Shin/Yeongjae-Shin.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"0149d9df-aaee-55d8-904a-3cf3e84bc9ef","excerpt":"각설하고 이렇듯 브라우저라는 것이 웹에 있어서 뗄래야 뗄 수 없는 그런 존재이다. 그럼 과연 브라우저는 어떻게 동작을 하는지 알아보자. 브라우저 주요 기능 브라우저의 주요 기능은 사용자가 선택한 자원을 서버에 요청하고 브라우저에 표시하는 것이다. 자원은 보통 HTML 문서이지만, PDF나 이미지 또는 다른 형태일 수 있다.\n자원의 주소는 URI(Uniform Resource Identifier…","html":"<img src=\"https://user-images.githubusercontent.com/60685930/136682489-f7146f9c-b9c4-4543-8f76-8659d9cf5975.png\">\n2021년 10월 기준 크롬이 무려 65.05%의 점유율을 차지하고 있다. 우리나라의 경우를 생각해보면 인터넷 익스플로러(IE)부터 시작해서 크롬으로 옮겨가기 까지\n많은 우여곡절이 있었던 것 같다. 나는 크롬이 출시되자마자 썼던 걸로 기억하는데 정부에서 제공하는 서비스를 이용할 수가 없어서 불편했던 기억이 있는데 이제는 크롬에서도 잘 동작하는것을 보면\n정말 많이 변했구나 생각이 든다.\n<p>각설하고 이렇듯 브라우저라는 것이 웹에 있어서 뗄래야 뗄 수 없는 그런 존재이다. 그럼 과연 브라우저는 어떻게 동작을 하는지 알아보자.</p>\n<h1 id=\"브라우저\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80\" aria-label=\"브라우저 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저</h1>\n<h2 id=\"주요-기능\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-%EA%B8%B0%EB%8A%A5\" aria-label=\"주요 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 기능</h2>\n<p>브라우저의 주요 기능은 사용자가 선택한 자원을 서버에 요청하고 브라우저에 표시하는 것이다. 자원은 보통 HTML 문서이지만, PDF나 이미지 또는 다른 형태일 수 있다.\n자원의 주소는 URI(Uniform Resource Identifier)에 의해 정해진다.</p>\n<h2 id=\"구조\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%A1%B0\" aria-label=\"구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구조</h2>\n<div style=\"text-align: center;\">\n    <figure>\n        <img src=\"https://d2.naver.com/content/images/2015/06/helloworld-59361-1.png\">\n        <figcaption>브라우저의 주요 구성 요소</figcaption>\n    </figure>\n</div>\n<p>브라우저를 구성하고 있는 요소는 다음과 같다.</p>\n<ol>\n<li>사용자 인터페이스: 요청한 페이지를 보여주는 창을 제외한 나머지 부분 (ex: 주소 표시줄, 북마크 등)</li>\n<li>브라우저 엔진: 사용자 인터페이스와 렌더링 엔진 사이의 동작 제. HTML 문서와 기타 자원의 웹 페이지를 사용자의 장치에 상호작용적인 시각 표현으로 변환</li>\n<li>\n<p>렌더링 엔진: 요청한 콘텐츠를 표시. HTML을 요청하면 HTML과 CSS를 파싱하여 화면에 표시함.</p>\n<ol>\n<li>게코(Gecko)엔진: 파이어폭스</li>\n<li>웹킷(Webkit)엔진: 사파리, 크롬</li>\n</ol>\n</li>\n<li>통신: HTTP 요청과 같은 네트워크 호출에 사용되며 이것은 플랫폼의 독립적인 인터페이스이고 각 플랫폼 하부에서 실행됨.</li>\n<li>UI 백엔드: 콤보 박스와 창 같은 기본적인 장치를 그림. 플랫폼에서 명시하지 않은 일반적인 인터페이스로서, OS 사용자 인터페이스 체계를 사용</li>\n<li>\n<p>자바스크립트 해석기: 자바스크립트 코드를 해석하고 결과를 렌더링 엔진으로 처리하는 자바스크립트 엔진</p>\n<ol>\n<li>크롬: V8(Chromium 프로젝트의 일환으로 구글에서 자체 개발)</li>\n<li>파이어폭스: SpiderMonkey(역사상 최초의 자바스크립트 엔진)</li>\n<li>사파리: 니트로(구 SquirrelFish)</li>\n<li>엣지: 차크라</li>\n<li>오페라: V8</li>\n<li>IE: 차크라</li>\n</ol>\n</li>\n<li>자료 저장소: localStorage, IndexedDB 같은 스토리지 메커니즘 지원. 브라우저가 설치된 컴퓨터의 로컬 드라이브에 생성된 작은 데이터베이스.</li>\n</ol>\n<blockquote>\n<p>크롬은 대부분의 브라우저와 달리 각 탭마다 별도의 렌더링 엔진 인스턴스를 유지한다. 각 탭은 독립된 프로세스로 처리된다.</p>\n</blockquote>\n<h2 id=\"동작-과정\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%9E%91-%EA%B3%BC%EC%A0%95\" aria-label=\"동작 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동작 과정</h2>\n<div style=\"text-align: center;\">\n    <figure>\n        <img src=\"https://d2.naver.com/content/images/2015/06/helloworld-59361-2.png\">\n        <figcaption>렌더링 엔진의 동작 과정</figcaption>\n    </figure>\n</div>\n<ol>\n<li>HTML 문서를 파싱하여 <strong>DOM 트리</strong>를 생성한다.</li>\n<li>CSS 파일과 함께 포함된 스타일 요소를 파싱하여 <strong>CSSOM 트리</strong>를 생성한다.</li>\n<li>만들어진 DOM 트리와 CSSOM 트리를 결합하여 <strong>렌더 트리</strong>를 생성한다.</li>\n<li>렌더 트리를 배치한다. 이것은 각 노드가 화면의 정확한 위치에 표시되는 것을 의미한다.</li>\n<li>렌더 트리를 그린다. UI 백엔드에서 랜더 트리의 각 노드를 가로지르며 렌더링한다.</li>\n</ol>\n<p>위 과정들은 <strong>점진적으로 진행</strong>된다. 실제로 브라우저는 8KB 청크의 데이터를 수신하고 전체 HTML 페이지가 로드될 때까지 기다리지 않고 조금씩 렌더링을 시작한다.</p>\n<div style=\"text-align: center;\">\n    <figure>\n        <img src=\"https://miro.medium.com/max/700/1*2_BpD1fDel_uSNhCbN1TrQ.png\">\n        <figcaption>실제 렌더링 과정을 나타낸 이미지</figcaption>\n    </figure>\n</div>\n<h3 id=\"1-domdocument-object-model트리-생성\" style=\"position:relative;\"><a href=\"#1-domdocument-object-model%ED%8A%B8%EB%A6%AC-%EC%83%9D%EC%84%B1\" aria-label=\"1 domdocument object model트리 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. DOM(Document Object Model)트리 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width,initial-scale=1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>style.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Critical Path<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Hello <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>web performance<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> students!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>awesome-photo.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span> </code></pre></div>\n<div style=\"text-align: center;\">\n    <figure>\n        <img src=\"https://i.imgur.com/lOHM4bV.png\">\n        <figcaption>HTML 파싱 과정</figcaption>\n    </figure>\n</div>\n<p>HTML 페이지는 바이트를 문자로 변환하여 토큰화 => 노드로 변환 => DOM 트리 생성 과정을 거치게 된다.\nDOM 트리는 렌더링될 때 어떻게 표시할지는 알려주지 않는데, 그 정보는 CSSOM이 알려준다.</p>\n<h3 id=\"2-cssomcss-object-model트리-생성\" style=\"position:relative;\"><a href=\"#2-cssomcss-object-model%ED%8A%B8%EB%A6%AC-%EC%83%9D%EC%84%B1\" aria-label=\"2 cssomcss object model트리 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. CSSOM(CSS Object Model)트리 생성</h3>\n<p>렌더링 엔진은 위에서 아래로 HTML 문서를 파싱하는데 이 때, <code class=\"language-text\">&lt;style></code>요소를 만나면 즉시 그 안의 CSS를 파싱한다.\nHTML 문서의 파싱을 중단하고 CSS 룰셋을 파싱하는데 집중한다. CSS 파싱이 끝나면 다시 HTML 파싱으로 돌아간다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span> \n   <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span> \n   <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">span</span> <span class=\"token punctuation\">{</span> \n   <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">p span</span> <span class=\"token punctuation\">{</span> \n   <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span> \n   <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> right<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> </code></pre></div>\n<p>CSS 또한 HTML과 마찬가지로 바이트를 문자로 변환 => 토큰화 => 노드로 변환 => CSSOM 트리 구축 과정을 거치게 된다.</p>\n<div style=\"text-align: center;\">\n    <figure>\n        <img src=\"https://i.imgur.com/gPFdcFS.png\">\n        <figcaption>CSS 파싱 과정</figcaption>\n    </figure>\n</div>\n<ul>\n<li>CSSOM이 트리 구조를 갖는 이유는 스타일은 <strong>하향식</strong>으로 규칙을 적용하게 된다. 페이지의 객체에 있는 스타일을 계산할 때, 브라우저는 해당 노드에 적용 가능한 가장 일반적인 규칙에서 더욱 구체적인 규칙을 적용하게 된다.</li>\n<li>위 트리는 완전한 CSSOM 트리가 아닌데 그 이유는 브라우저가 기본적으로 제공하는 <code class=\"language-text\">user agent styles</code>에서 스타일 시트가 재정의 하도록 결정한 스타일만 표시하기 때문이다.</li>\n</ul>\n<h3 id=\"3-렌더-트리-생성\" style=\"position:relative;\"><a href=\"#3-%EB%A0%8C%EB%8D%94-%ED%8A%B8%EB%A6%AC-%EC%83%9D%EC%84%B1\" aria-label=\"3 렌더 트리 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 렌더 트리 생성</h3>\n<div style=\"text-align: center;\">\n    <figure>\n        <img src=\"https://i.imgur.com/9iB4RPE.png\">\n        <figcaption>렌더 트리 생성 과정</figcaption>\n    </figure>\n</div>\n<ul>\n<li>먼저 <strong>DOM 트리와 CSSOM 트리를 결합하여 렌더 트리를 형성</strong>한다.</li>\n<li>렌더 트리에는 페이지를 렌더링하는데 필요한 노드만 포함된다.</li>\n<li><strong>렌더 트리는 페이지에 표시되는 모든 DOM 콘텐츠와 각 노드에 대한 모든 스타일 정보를 갖고 있다.</strong></li>\n</ul>\n<p>DOM 트리의 루트에서 시작하여 순회하는데 이 때 렌더링이 되지 않는 <code class=\"language-text\">&lt;script></code>나 <code class=\"language-text\">&lt;meta></code>태그와 같은 노드들은 렌더 트리에서 생략된다.\n일부 노드는 CSS를 통해 숨겨지며 렌더 트리에서도 생략된다. 예를 들면, <code class=\"language-text\">display: none</code>속성을 갖는 노드는 렌더 트리에서 생략된다.\n이후 표시된 각 노드에 대해 매칭되는 CSSOM 규칙을 찾고 적용한다. 마지막으로 표시된 노드를 콘텐츠와 스타일과 함께 내보내게 된다.</p>\n<h3 id=\"4-렌더-트리-배치\" style=\"position:relative;\"><a href=\"#4-%EB%A0%8C%EB%8D%94-%ED%8A%B8%EB%A6%AC-%EB%B0%B0%EC%B9%98\" aria-label=\"4 렌더 트리 배치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 렌더 트리 배치</h3>\n<p>배치는 보통 다음과 같은 형태로 진행된다.</p>\n<ol>\n<li>부모 렌더러가 자신의 너비를 결정</li>\n<li>\n<p>부모가 자식을 검토</p>\n<ol>\n<li>자식 렌더러를 배치(자식와 x와 y를 설정)</li>\n<li>필요하다면 자식 배치를 호출하여 자식의 높이를 계산</li>\n</ol>\n</li>\n<li>부모는 자식의 누적된 높이와 여백, 패딩을 사용하여 자신의 높이 설정. 이 값은 부모 렌더러의 부모가 사용하게 됨</li>\n</ol>\n<p>뷰포트 내에서 노드의 정확한 위치와 크기를 계산하는데, 페이지 내에서 각 객체의 정확한 위치와 크기를 계산하기 위해, 브라우저는 렌더 트리의 루트에서 시작하여 트리를 순회함.\n레이아웃 과정의 결과는 <strong>Box Model</strong>이다. 박스 모델은 뷰포트 내에서 각 노드의 정확한 위치와 크기 정보를 담고 있다. 모든 상대적인 측정값은 화면에서 <strong>절대적인 픽셀</strong>로 변환된다.</p>\n<h3 id=\"5-랜더-트리-그리기\" style=\"position:relative;\"><a href=\"#5-%EB%9E%9C%EB%8D%94-%ED%8A%B8%EB%A6%AC-%EA%B7%B8%EB%A6%AC%EA%B8%B0\" aria-label=\"5 랜더 트리 그리기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 랜더 트리 그리기</h3>\n<p>마지막으로, 렌더 트리의 각 노드를 화면에서의 실제 픽셀로 변환한다.</p>\n<hr>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"https://d2.naver.com/helloworld/59361\">https://d2.naver.com/helloworld/59361</a></li>\n<li><a href=\"https://poiemaweb.com/js-browser\">https://poiemaweb.com/js-browser</a></li>\n<li><a href=\"https://medium.com/web-god-mode/how-web-browsers-work-behind-the-scene-architecture-technologies-and-internal-working-fec601488bfa\">https://medium.com/web-god-mode/how-web-browsers-work-behind-the-scene-architecture-technologies-and-internal-working-fec601488bfa</a></li>\n<li><a href=\"https://velog.io/@yejineee/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%8F%99%EC%9E%91-%EA%B3%BC%EC%A0%95\">https://velog.io/@yejineee/브라우저-동작-과정</a></li>\n</ul>","frontmatter":{"title":"브라우저는 어떻게 동작하나요?","date":"October 10, 2021"}}},"pageContext":{"slug":"/CS/브라우저의-동작-원리/","previous":{"fields":{"slug":"/CS/프로세스와-쓰레드에-대해/"},"frontmatter":{"title":"프로세스와 쓰레드에 대해"}},"next":{"fields":{"slug":"/Web/lighthouse로-웹-페이지-분석해보기/"},"frontmatter":{"title":"Lighthouse로 웹 페이지 분석해보기"}}}},"staticQueryHashes":["2486386679","3128451518"]}